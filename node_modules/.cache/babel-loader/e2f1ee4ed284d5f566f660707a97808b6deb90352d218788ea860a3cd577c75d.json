{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{onAuthStateChanged}from'firebase/auth';import{auth}from'../firebaseConfig';import{getUserRole,logout}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{return useContext(AuthContext);};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[userRole,setUserRole]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async currentUser=>{setUser(currentUser);if(currentUser){const role=await getUserRole(currentUser.uid);setUserRole(role);}else{setUserRole(null);}setLoading(false);});return unsubscribe;},[]);const value={user,userRole,loading,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","onAuthStateChanged","auth","getUserRole","logout","jsx","_jsx","AuthContext","useAuth","AuthProvider","_ref","children","user","setUser","userRole","setUserRole","loading","setLoading","unsubscribe","currentUser","role","uid","value","Provider"],"sources":["/home/ubuntu/personal-delivery-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../firebaseConfig';\nimport { getUserRole, logout } from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n      setUser(currentUser);\n      if (currentUser) {\n        const role = await getUserRole(currentUser.uid);\n        setUserRole(role);\n      } else {\n        setUserRole(null);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    user,\n    userRole,\n    loading,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,OAASC,kBAAkB,KAAQ,eAAe,CAClD,OAASC,IAAI,KAAQ,mBAAmB,CACxC,OAASC,WAAW,CAAEC,MAAM,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,KAAM,CAAAC,WAAW,cAAGV,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAW,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAV,UAAU,CAACS,WAAW,CAAC,CAChC,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,WAAW,CAAGjB,kBAAkB,CAACC,IAAI,CAAE,KAAO,CAAAiB,WAAW,EAAK,CAClEN,OAAO,CAACM,WAAW,CAAC,CACpB,GAAIA,WAAW,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAjB,WAAW,CAACgB,WAAW,CAACE,GAAG,CAAC,CAC/CN,WAAW,CAACK,IAAI,CAAC,CACnB,CAAC,IAAM,CACLL,WAAW,CAAC,IAAI,CAAC,CACnB,CACAE,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CAEF,MAAO,CAAAC,WAAW,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAI,KAAK,CAAG,CACZV,IAAI,CACJE,QAAQ,CACRE,OAAO,CACPZ,MACF,CAAC,CAED,mBACEE,IAAA,CAACC,WAAW,CAACgB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAX,QAAA,CAChC,CAACK,OAAO,EAAIL,QAAQ,CACD,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}